<?php

namespace ReclamationBundle\Repository;

/**
 * tabReclamationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TabReclamationRepository extends \Doctrine\ORM\EntityRepository

{
    public function trierEff()
    {  $Query = $this->getEntityManager()->createQuery('SELECT M FROM ReclamationBundle:TabReclamation M  ORDER BY M.nomDemande DESC');
        return $Query->getResult();
    }

    public function approuver($id,$status){
        $query = $this->getEntityManager()
            ->createQuery(" UPDATE ReclamationBundle:TabReclamation a SET a.prenomDemande=:avis where a.idDemande=:id ")
            ->setParameter('id', $id)
            ->setParameter('avis', $status);
        return $query->getResult();
    }

    public function findEntitiesByString($str){
        return $this->getEntityManager()
            ->createQuery(
                'SELECT e
                FROM ReclamationBundle:TabReclamation e
                WHERE e.nomDemande LIKE :str'
            )
            ->setParameter('str', '%'.$str.'%')
            ->getResult();
    }

    public function findReclamationByid($id)
    {
        try {
            return $this->getEntityManager()
                ->createQuery(
                    "SELECT p
                FROM ReclamationBundle:TabReclamation
                p WHERE p.idDemande =:id"
                )
                ->setParameter('id', $id)
                ->getOneOrNullResult();
        } catch (NonUniqueResultException $e) {
        }
    }

    public function FindAcceptedEv()
    {
        $query = $this->getEntityManager()
            ->createQuery("
            select e from ReclamationBundle:TabReclamation e
            where e.prenomDemande='Approuvée'");
        return $query->getResult();
    }
    public function FindNonAcceptedEv()
    {
        $query = $this->getEntityManager()
            ->createQuery("select e from ReclamationBundle:TabReclamation e where e.prenomDemande='Non Approuvée'");

        return $query->getResult();
    }



}

