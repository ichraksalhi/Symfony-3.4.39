<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevDebugProjectContainerUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes;

    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
        if (null === self::$declaredRoutes) {
            self::$declaredRoutes = [
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_open_file' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:openAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/open',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_twig_error_test' => array (  0 =>   array (    0 => 'code',    1 => '_format',  ),  1 =>   array (    '_controller' => 'twig.controller.preview_error:previewErrorPageAction',    '_format' => 'html',  ),  2 =>   array (    'code' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'code',    ),    2 =>     array (      0 => 'text',      1 => '/_error',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'abonneresto_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\abonnerestoController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resto/abonneresto/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'abonneresto_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\abonnerestoController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/resto/abonneresto',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'abonneresto_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\abonnerestoController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resto/abonneresto/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'abonneresto_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\abonnerestoController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/resto/abonneresto',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'abonneresto_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\abonnerestoController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/resto/abonneresto',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'abonneresto_ajouterMobile' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\abonnerestoController::AjouterMobileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resto/abonneresto/newMobile',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'abonneresto_afficherMobile' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\abonnerestoController::AfficherMobileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resto/abonneresto/AfficherMobile',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'abonneresto_rechercherMobile' => array (  0 =>   array (    0 => 'nom',  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\abonnerestoController::RechercheMobileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'nom',    ),    1 =>     array (      0 => 'text',      1 => '/resto/abonneresto/RechercherMobile',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'resto_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resto/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'show_reservations' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\abonnerestoController::showMyReservationsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resto/show',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'paiement_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\paiementController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resto/paiement/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'paiement_indexAdmin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\paiementController::indexAdminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resto/paiement/indexAdmin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'paiement_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\paiementController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/resto/paiement',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'paiement_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\paiementController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resto/paiement/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'paiement_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\paiementController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/resto/paiement',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'paiement_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\paiementController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/resto/paiement',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'notification' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\paiementController::sendNotificationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resto/paiement/notification',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'paiement_ajouterMobile' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\paiementController::AjouterMobileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resto/paiement/newMobile',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'paiement_afficherMobile' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\paiementController::AfficherMobileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resto/paiement/AfficherMobile',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\DefaultController::adminHomeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resto/adminHome',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'user' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\DefaultController::userHomeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resto/userHome',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'platss' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\abonnerestoController::platAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resto/platss',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'plat_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\PlatController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resto/plat/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'plat_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\PlatController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/resto/plat',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'plat_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\PlatController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resto/plat/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'plat_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\PlatController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/resto/plat',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'plat_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\PlatController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/resto/plat',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'plat_rating' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\PlatController::updaterateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resto/plat/rating',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'plats_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\PlatsController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resto/plats/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'plats_indexAdmin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\PlatsController::indexAdminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resto/plats/indexAdmin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'plats_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\PlatsController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/resto/plats',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'plats_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\PlatsController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resto/plats/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'plats_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\PlatsController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/resto/plats',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'plats_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\PlatsController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/resto/plats',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'plats_rating' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\PlatsController::updaterateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resto/plats/rating',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'plats_stat' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\PlatController::statAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resto/plats/stat',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'plats_afficherMobile' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\PlatsController::AfficherMobileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resto/plats/AfficherMobile',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'plats_rateMobile' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\PlatsController::RateMobileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resto/plats/RateMobile',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pdf' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\DefaultController::myPdfAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resto/mypdf',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cartefidelite_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\cartefideliteController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resto/carte/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cartefidelite_indexAdmin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\cartefideliteController::indexAdminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resto/carte/indexAdmin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cartefidelite_show' => array (  0 =>   array (    0 => 'idC',  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\cartefideliteController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idC',    ),    2 =>     array (      0 => 'text',      1 => '/resto/carte',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cartefidelite_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\cartefideliteController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resto/carte/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cartefidelite_edit' => array (  0 =>   array (    0 => 'idC',  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\cartefideliteController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idC',    ),    2 =>     array (      0 => 'text',      1 => '/resto/carte',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cartefidelite_delete' => array (  0 =>   array (    0 => 'idC',  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\cartefideliteController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idC',    ),    2 =>     array (      0 => 'text',      1 => '/resto/carte',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cartefidelite_transformer' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\cartefideliteController::transformerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resto/carte/transformer',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cartefidelite_show1' => array (  0 =>   array (    0 => 'idC',  ),  1 =>   array (    '_controller' => 'RestoBundle\\Controller\\cartefideliteController::showListeAboAdminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/abonnements',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idC',    ),    2 =>     array (      0 => 'text',      1 => '/resto/carte',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ichh_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ichhBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.security.controller:loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.security.controller:checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.security.controller:logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.profile.controller:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.profile.controller:editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:registerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:checkEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirm' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:confirmAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/register/confirm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirmed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:confirmedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/confirmed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:requestAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/request',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_send_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:sendEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/send-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:checkEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_reset' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:resetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/resetting/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_change_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.change_password.controller:changePasswordAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/change-password',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'notification_list' => array (  0 =>   array (    0 => 'notifiable',  ),  1 =>   array (    '_controller' => 'Mgilet\\NotificationBundle\\Controller\\NotificationController::listAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'notifiable',    ),    1 =>     array (      0 => 'text',      1 => '/notifications',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'notification_mark_as_seen' => array (  0 =>   array (    0 => 'notifiable',    1 => 'notification',  ),  1 =>   array (    '_controller' => 'Mgilet\\NotificationBundle\\Controller\\NotificationController::markAsSeenAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'notification',    ),    1 =>     array (      0 => 'text',      1 => '/mark_as_seen',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'notifiable',    ),    3 =>     array (      0 => 'text',      1 => '/notifications',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'notification_mark_as_unseen' => array (  0 =>   array (    0 => 'notifiable',    1 => 'notification',  ),  1 =>   array (    '_controller' => 'Mgilet\\NotificationBundle\\Controller\\NotificationController::markAsUnSeenAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'notification',    ),    1 =>     array (      0 => 'text',      1 => '/mark_as_unseen',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'notifiable',    ),    3 =>     array (      0 => 'text',      1 => '/notifications',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'notification_mark_all_as_seen' => array (  0 =>   array (    0 => 'notifiable',  ),  1 =>   array (    '_controller' => 'Mgilet\\NotificationBundle\\Controller\\NotificationController::markAllAsSeenAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/markAllAsSeen',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'notifiable',    ),    2 =>     array (      0 => 'text',      1 => '/notifications',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reclamation_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\DefaultController::createAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'read' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\DefaultController::readAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/read',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'read1' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\DefaultController::read1Action',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/read1',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\DefaultController::createAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\DefaultController::updateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/update',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\DefaultController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'trier' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\DefaultController::trierAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/trier',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'trier1' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\DefaultController::trier1Action',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/trier1',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'affichage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\EvaluationController::affichageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/affichage',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'affichage1' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\EvaluationController::affichage1Action',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/affichage1',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\EvaluationController::ajoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ajout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'supprimer' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\EvaluationController::supprimerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/supprimer',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'modifier' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\EvaluationController::modifierAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/modifier',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajout1' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\EvaluationController::ajoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ajout1',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'recherche_reclamation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\DefaultController::searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/rechercher',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'approved' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\DefaultController::approvedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/Approved',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sandbox_pdfexample' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\DefaultController::pdfAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/pdf',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\EvaluationController::searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'detaile' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\DefaultController::showdetaileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/detaile',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'recents' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\EvaluationController::recentsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/recents',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'venir' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\EvaluationController::venirAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/venir',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'searchdate' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\EvaluationController::searchdateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/searchdate',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'message' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\DefaultController::messageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/message',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'messagesorti' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\DefaultController::message1Action',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/messagesorti',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'listNonapprouve' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\DefaultController::listNonapprouveAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/listNonapprouve',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'listapprouve' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\DefaultController::listapprouveAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/listapprouve',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'moyNote' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\EvaluationController::moyNoteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/moyNote',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'RatingsNbre' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\EvaluationController::NbreNoteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/RatingsNbre',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'RatingsNbre1' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\EvaluationController::moyNote1Action',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/RatingsNbre1',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'moyId' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\EvaluationController::moyIdAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/moyId',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'readMobile' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\DefaultController::readMobileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reclamation_api/readMobile',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'findMobile' => array (  0 =>   array (    0 => 'str',  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\DefaultController::findMobileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'str',    ),    1 =>     array (      0 => 'text',      1 => '/reclamation_api/findMobile',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'createMobile' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\DefaultController::createMobileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reclamation_api/createMobile',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajoutMobile' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\EvaluationController::ajoutMobileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reclamation_api/ajoutMobile',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'affichageMobile' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\EvaluationController::affichageMobileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reclamation_api/affichageMobile',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'newMobile' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle:MapLocation:newMobile',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reclamation_api/newMobile',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'allMobile' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle:MapLocation:allMobile',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reclamation_api/allMobile',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'gettotalperMobile' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\EvaluationController::gettotalperMobileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reclamation_api/gettotalperMobile',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'gettotalperMobile1' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\DefaultController::gettotalperMobile1Action',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reclamation_api/gettotalperMobile1',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'gettotalperMobile2' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\EvaluationController::gettotalperMobile2Action',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reclamation_api/gettotalperMobile2',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'gettotalperMobile3' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\EvaluationController::gettotalperMobile3Action',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reclamation_api/gettotalperMobile3',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    ];
        }
    }

    public function generate($name, $parameters = [], $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
